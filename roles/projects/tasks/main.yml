---

- name: Ensure ~/Projects directory exists (laptop)
  file:
    path: ~/Projects
    state: directory
  when: system_type == "laptop"

- name: Symlink ~/Projects (desktop)
  file:
    path: ~/Projects
    src: /Volumes/Data/Projects/
    state: link
    force: yes
  when: system_type == "desktop"

# OSS projects

- name: Clone OSS project repos
  git:
    repo: "{{ item.repo }}"
    dest: ~/Projects/oss/{{ item.dest }}
    accept_hostkey: yes
    version: HEAD
  with_items: "{{ projects_oss }}"

# Internal projects

- name: Clone internal project repos
  git:
    repo: "{{ item.repo }}"
    dest: ~/Projects/internal/{{ item.dest }}
    accept_hostkey: yes
    version: HEAD
  with_items: "{{ projects_internal }}"

# Client projects

- name: Clone client project repos
  git:
    repo: "{{ item.repo }}"
    dest: ~/Projects/client/{{ item.dest }}/docroot
    accept_hostkey: yes
    version: HEAD
  with_items: "{{ projects_client }}"

# TODO: Playing up, handle with Composer when Vlad supports it.
# - name: Clone Vlad to projects where required
#   git:
#     repo: git@github.com:hashbangcode/vlad.git
#     dest: ~/Projects/client/{{ item.dest }}/vlad
#     accept_hostkey: yes
#     depth: 1
#     version: dev
#   with_items: "{{ projects_client }}"
#   when: item.vlad is defined and item.vlad

- name: Symlink vlad_settings.yml for projects where required
  file:
    src: "{{ ext_prefs_path_common }}/projects/client/{{ item.dest }}/docroot/vlad_settings.yml"
    dest: ~/Projects/client/{{ item.dest }}/settings/vlad_settings.yml
    state: link
  with_items: "{{ projects_client }}"
  when: item.link_settings is defined and item.link_settings
